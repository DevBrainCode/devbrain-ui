// ******************************* DevBrain UI ****************************** //
// *
// *    Define the wrapper.
// *
// ************************************************************************** //
// *
// *    <div class="container">...</div>
// *    <div class="container-fluid">...</div>
// *    <div class="container-sm">...</div>
// *    <div class="container-md">...</div>
// *    <div class="container-lg">...</div>
// *    <div class="container-xl">...</div>
// *    <div class="container-xxl">...</div>
// *    <div class="container-xxxl">...</div>
// *
// ************************************************************************** //

@use './../abstracts/functions/collection';



/// Containers Base 
/// =============================================
///
/// cbl : containers base list
/// cbl : containers base selector
/// .container, 
/// .container-fluid, 
/// .container-phone, 
/// .container-tablet, 
/// .container-laptop, 
/// .container-desktop, 
/// .container-wide, 
/// .container-ultra { ... }

$cbl: (container, container-fluid);
$cbs: '';

@each $key, $container in $containers {
  $cbl: append($cbl, container-#{$key});
}
@each $c in $cbl {
  $cbs: $cbs + '.#{$c}, ';
}
$cbs: unquote(str-slice($cbs, 1, -3));

#{$cbs} { 
  display: block;
  width: 100%;
  padding-right: map-get($spacers, 3);
  padding-left: map-get($spacers, 3);
  margin-right: auto;
  margin-left: auto;
}


/// Containers Sizes 
/// =============================================
///
/// .container-phone {max-width: 540px;}
/// .container-tablet {max-width: 720px;}
/// .container-laptop {max-width: 960px;}
/// .container-desktop {max-width: 1140px;}
/// .container-wide {max-width: 1440px;}
/// .container-ultra {max-width: 1520px;}

@each $size, $container in $containers {
  .container-#{$size} {
    // min-width: map-get($containers, 'phone');
    max-width: map-get($containers, $size);
  }
}



/// Responsive containers
/// =============================================
///


@each $size, $breakpoint in $breakpoints {
  @if $breakpoint > 0 {

    // .container-#{$size} {
    //   max-width: map-get($containers, $size);
    // }

    $container-list : (container);
    @media (min-width: $breakpoint) {

      // @each $key, $container in $containers {
      //   @if $container < $breakpoint {
      //     $container-list: append($container-list, container-#{$key});
      //   }
      // }

      $selectors: '';
      $container-list: collection.reverse($container-list);
      @each $container in $container-list {
        $selectors: $selectors + '.#{$container}, ';
      }
      $selectors: unquote(str-slice($selectors, 1, -3));

      #{$selectors} { 
        // min-width: map-get($containers, 'phone');
        max-width: map-get($containers, $size);
      }
    }
  }
}
