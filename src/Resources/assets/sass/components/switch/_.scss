// ***************************** DevBrain Theme ***************************** //
// *
// *    Components: Switch
// *
// ************************************************************************** //

@use "sass:math";
@use 'variables' as var;
@use './../../abstracts/mixins/flex';
@use './../../abstracts/mixins/sizes';
@use './../../abstracts/mixins/theme';
@use './../../abstracts/mixins/spaces';
@use './../../abstracts/mixins/position';


.switch {
    @include flex.middle;
    @include position.relative;

    padding-left: math.div(var.$switch-width, 16) + map-get($spacers, 3 );

    &-input {
        display: none;
    }

    &-slider {
        @include position.absolute(null, null, null, 0);
        @include sizes.set(var.$switch-width-px, var.$switch-height-px);
    
        cursor: pointer;
        border-width: 1px;
        border-style: solid;
        border-radius: var.$switch-height-px;
        transition: background-color map-get($delays , normal);
        
        // Theme
        @include theme.property(border-color, switch-slider-off--border-color);
        @include theme.property(background-color, switch-slider-off--background-color);

        &:before {
            @include position.absolute(null, null, 1px, 2px);
            @include sizes.set(calc(var.$switch-height-px - 4px), calc(var.$switch-height-px - 4px));
            @include theme.property(background-color, switch-slider-off--indicator-color);
            
            content: "";
            border-radius: 50%;
            transition: map-get($delays , normal);
        }
    }

    &-label {
        // border: 1px solid red;
    }
}


.switch-input:checked + .switch-slider {
    @include theme.property(border-color, switch-slider-on--border-color);
    @include theme.property(background-color, switch-slider-on--background-color);

    &:before {
        @include theme.property(background-color, switch-slider-on--indicator-color);
        left: calc(var.$switch-width-px - var.$switch-height-px + 1px);
    }
}